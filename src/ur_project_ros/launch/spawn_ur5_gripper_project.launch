<?xml version="1.0"?>

<launch>

    <!-- Associate to the robot_description parameter, the urdf file that model the robot-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find ur_project_ros)/urdf/ur5_gripper_ros.xacro"/>

    <!-- Set the position in the empty world for the robot-->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0.6"/>
    <!--arg name="z" default="0.5"/>-->

    <!-- Set up the world for pick and place-->
    <!-- <arg name="world_file" default="$(find ros_project_gazebo)/worlds/ur_ros_pick_place.world"/>-->
    
    <!-- Spawn rod for pick and place-->
    <param name="robot_description_rod" command="$(find xacro)/xacro --inorder $(find ur_project_ros)/urdf/rod_ros_project.xacro"/>

    <!-- Set position for the rod-->
    <arg name="x_rod" default="0"/>
    <arg name="y_rod" default="0.6"/>
    <arg name="z_rod" default="0.92"/>


    <arg name="world_file" default="$(find ur_project_ros)/worlds/ros_project_world.world" />

    <!-- Launch Gazebo world in paused-->
    <include file= "$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="true"/>
        <arg name="paused" value="true"/>
        <arg name="world_name" value="$(arg world_file)"/>
    </include>

    <!-- Spawn the robot using the package gazebo_ros -->
    <node name="spawn_the_robot" pkg="gazebo_ros" type="spawn_model"  output="screen" args="-urdf -param robot_description -model ur5 -x $(arg x) -y $(arg y) -z $(arg z)" />

    <node name="spawn_the_rod" pkg="gazebo_ros" type="spawn_model"  output="screen" args="-urdf -param robot_description_rod -model rod_prop -x $(arg x_rod) -y $(arg y_rod) -z $(arg z_rod)" />

    <!--Controllers extracted from the controller programmed-->

    <rosparam command="load" file="$(find ur_project_ros)/config/ur5_gripper_controllers.yaml" />

    <node name="controller_spawner" pkg="controller_manager" type="spawner"
            output="screen" respawn="false" ns="/ur5"
            args="joint_state_controller
                eff_joint_traj_controller
                gripper_controller
                --timeout 60 ">
    </node>

    
    <!-- Converts joint states to TF for rviz and rqt-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
            output="screen" respawn="false">
            <remap from="/joint_states" to="/ur5/joint_states"/>
    </node>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <remap from="/joint_states" to="/ur5/joint_states"/>

    <!-- Loads the motion planning for rviz-->
    <include file="$(find ur_gripper_moveit_config_ros_project)/launch/planning_context.launch" >
        <arg name="load_robot_description" value="false"/>
    </include>    


    <include file="$(find ur_gripper_moveit_config_ros_project)/launch/move_group.launch">
        <arg name="publish_monitored_planning_scene" value="true"/>
    </include>

    <!-- Loads the motion controller of the robot with moveit-->
    <include file="$(find ur_gripper_moveit_config_ros_project)/launch/moveit_rviz.launch">
        <arg name="rviz_config" value="$(find ur_gripper_moveit_config_ros_project)/launch/moveit.rviz"/>
    </include>

</launch>